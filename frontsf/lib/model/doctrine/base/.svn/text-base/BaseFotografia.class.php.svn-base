<?php

/**
 * BaseFotografia
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $descripcion
 * @property string $nombre_archivo
 * @property string $camera
 * @property string $model
 * @property string $fstop
 * @property string $exposuretime
 * @property string $isospeed
 * @property string $focallength
 * @property timestamp $taken
 * @property string $mimetype
 * @property integer $usuario_id
 * @property integer $categoria_id
 * @property integer $subcategoria_id
 * @property integer $sesion_id
 * @property integer $carga_id
 * @property float $precio
 * @property integer $reviewed
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property integer $created_by
 * @property integer $updated_by
 * @property timestamp $deleted_at
 * @property integer $deleted_by
 * @property Usuario $Usuario
 * @property Categoria $Categoria
 * @property Subcategoria $Subcategoria
 * @property Sesion $Sesion
 * @property Carga $Carga
 * @property Doctrine_Collection $Lugares
 * @property Doctrine_Collection $Temas
 * @property Doctrine_Collection $Profile
 * @property Doctrine_Collection $SfGuardUserProfileFotografias
 * @property Doctrine_Collection $Items
 * 
 * @method string              getDescripcion()                   Returns the current record's "descripcion" value
 * @method string              getNombreArchivo()                 Returns the current record's "nombre_archivo" value
 * @method string              getCamera()                        Returns the current record's "camera" value
 * @method string              getModel()                         Returns the current record's "model" value
 * @method string              getFstop()                         Returns the current record's "fstop" value
 * @method string              getExposuretime()                  Returns the current record's "exposuretime" value
 * @method string              getIsospeed()                      Returns the current record's "isospeed" value
 * @method string              getFocallength()                   Returns the current record's "focallength" value
 * @method timestamp           getTaken()                         Returns the current record's "taken" value
 * @method string              getMimetype()                      Returns the current record's "mimetype" value
 * @method integer             getUsuarioId()                     Returns the current record's "usuario_id" value
 * @method integer             getCategoriaId()                   Returns the current record's "categoria_id" value
 * @method integer             getSubcategoriaId()                Returns the current record's "subcategoria_id" value
 * @method integer             getSesionId()                      Returns the current record's "sesion_id" value
 * @method integer             getCargaId()                       Returns the current record's "carga_id" value
 * @method float               getPrecio()                        Returns the current record's "precio" value
 * @method integer             getReviewed()                      Returns the current record's "reviewed" value
 * @method timestamp           getCreatedAt()                     Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()                     Returns the current record's "updated_at" value
 * @method integer             getCreatedBy()                     Returns the current record's "created_by" value
 * @method integer             getUpdatedBy()                     Returns the current record's "updated_by" value
 * @method timestamp           getDeletedAt()                     Returns the current record's "deleted_at" value
 * @method integer             getDeletedBy()                     Returns the current record's "deleted_by" value
 * @method Usuario             getUsuario()                       Returns the current record's "Usuario" value
 * @method Categoria           getCategoria()                     Returns the current record's "Categoria" value
 * @method Subcategoria        getSubcategoria()                  Returns the current record's "Subcategoria" value
 * @method Sesion              getSesion()                        Returns the current record's "Sesion" value
 * @method Carga               getCarga()                         Returns the current record's "Carga" value
 * @method Doctrine_Collection getLugares()                       Returns the current record's "Lugares" collection
 * @method Doctrine_Collection getTemas()                         Returns the current record's "Temas" collection
 * @method Doctrine_Collection getProfile()                       Returns the current record's "Profile" collection
 * @method Doctrine_Collection getSfGuardUserProfileFotografias() Returns the current record's "SfGuardUserProfileFotografias" collection
 * @method Doctrine_Collection getItems()                         Returns the current record's "Items" collection
 * @method Fotografia          setDescripcion()                   Sets the current record's "descripcion" value
 * @method Fotografia          setNombreArchivo()                 Sets the current record's "nombre_archivo" value
 * @method Fotografia          setCamera()                        Sets the current record's "camera" value
 * @method Fotografia          setModel()                         Sets the current record's "model" value
 * @method Fotografia          setFstop()                         Sets the current record's "fstop" value
 * @method Fotografia          setExposuretime()                  Sets the current record's "exposuretime" value
 * @method Fotografia          setIsospeed()                      Sets the current record's "isospeed" value
 * @method Fotografia          setFocallength()                   Sets the current record's "focallength" value
 * @method Fotografia          setTaken()                         Sets the current record's "taken" value
 * @method Fotografia          setMimetype()                      Sets the current record's "mimetype" value
 * @method Fotografia          setUsuarioId()                     Sets the current record's "usuario_id" value
 * @method Fotografia          setCategoriaId()                   Sets the current record's "categoria_id" value
 * @method Fotografia          setSubcategoriaId()                Sets the current record's "subcategoria_id" value
 * @method Fotografia          setSesionId()                      Sets the current record's "sesion_id" value
 * @method Fotografia          setCargaId()                       Sets the current record's "carga_id" value
 * @method Fotografia          setPrecio()                        Sets the current record's "precio" value
 * @method Fotografia          setReviewed()                      Sets the current record's "reviewed" value
 * @method Fotografia          setCreatedAt()                     Sets the current record's "created_at" value
 * @method Fotografia          setUpdatedAt()                     Sets the current record's "updated_at" value
 * @method Fotografia          setCreatedBy()                     Sets the current record's "created_by" value
 * @method Fotografia          setUpdatedBy()                     Sets the current record's "updated_by" value
 * @method Fotografia          setDeletedAt()                     Sets the current record's "deleted_at" value
 * @method Fotografia          setDeletedBy()                     Sets the current record's "deleted_by" value
 * @method Fotografia          setUsuario()                       Sets the current record's "Usuario" value
 * @method Fotografia          setCategoria()                     Sets the current record's "Categoria" value
 * @method Fotografia          setSubcategoria()                  Sets the current record's "Subcategoria" value
 * @method Fotografia          setSesion()                        Sets the current record's "Sesion" value
 * @method Fotografia          setCarga()                         Sets the current record's "Carga" value
 * @method Fotografia          setLugares()                       Sets the current record's "Lugares" collection
 * @method Fotografia          setTemas()                         Sets the current record's "Temas" collection
 * @method Fotografia          setProfile()                       Sets the current record's "Profile" collection
 * @method Fotografia          setSfGuardUserProfileFotografias() Sets the current record's "SfGuardUserProfileFotografias" collection
 * @method Fotografia          setItems()                         Sets the current record's "Items" collection
 * 
 * @package    Fotiar
 * @subpackage model
 * @author     Danilo R. Frid
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFotografia extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('fotografia');
        $this->hasColumn('descripcion', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('nombre_archivo', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('camera', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('model', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('fstop', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('exposuretime', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('isospeed', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('focallength', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('taken', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('mimetype', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('usuario_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('categoria_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('subcategoria_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('sesion_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('carga_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('precio', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('reviewed', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('created_at', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => false,
             ));
        $this->hasColumn('updated_at', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => false,
             ));
        $this->hasColumn('created_by', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('updated_by', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('deleted_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('deleted_by', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Usuario', array(
             'local' => 'usuario_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));

        $this->hasOne('Categoria', array(
             'local' => 'categoria_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));

        $this->hasOne('Subcategoria', array(
             'local' => 'subcategoria_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));

        $this->hasOne('Sesion', array(
             'local' => 'sesion_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));

        $this->hasOne('Carga', array(
             'local' => 'carga_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));

        $this->hasMany('Lugar as Lugares', array(
             'refClass' => 'FotografiaLugar',
             'local' => 'fotografia_id',
             'foreign' => 'lugar_id'));

        $this->hasMany('Tema as Temas', array(
             'refClass' => 'FotografiaTema',
             'local' => 'fotografia_id',
             'foreign' => 'tema_id'));

        $this->hasMany('sfGuardUserProfile as Profile', array(
             'refClass' => 'sfGuardUserProfileFotografia',
             'local' => 'fotografia_id',
             'foreign' => 'sf_guard_user_profile_id'));

        $this->hasMany('sfGuardUserProfileFotografia as SfGuardUserProfileFotografias', array(
             'local' => 'id',
             'foreign' => 'fotografia_id'));

        $this->hasMany('PedidoItem as Items', array(
             'local' => 'id',
             'foreign' => 'fotografia_id'));
    }
}