<?php

/**
 * BaseUsuario
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $usuario
 * @property string $contrasena
 * @property timestamp $contrasena_updated_at
 * @property string $nombre
 * @property string $apellido
 * @property string $correo
 * @property float $precio
 * @property enum $rol_id
 * @property float $comision
 * @property timestamp $created_at
 * @property integer $created_by
 * @property timestamp $updated_at
 * @property integer $updated_by
 * @property timestamp $deleted_at
 * @property integer $deleted_by
 * @property Doctrine_Collection $Fotografias
 * @property Doctrine_Collection $Sesiones
 * 
 * @method string              getUsuario()               Returns the current record's "usuario" value
 * @method string              getContrasena()            Returns the current record's "contrasena" value
 * @method timestamp           getContrasenaUpdatedAt()   Returns the current record's "contrasena_updated_at" value
 * @method string              getNombre()                Returns the current record's "nombre" value
 * @method string              getApellido()              Returns the current record's "apellido" value
 * @method string              getCorreo()                Returns the current record's "correo" value
 * @method float               getPrecio()                Returns the current record's "precio" value
 * @method enum                getRolId()                 Returns the current record's "rol_id" value
 * @method float               getComision()              Returns the current record's "comision" value
 * @method timestamp           getCreatedAt()             Returns the current record's "created_at" value
 * @method integer             getCreatedBy()             Returns the current record's "created_by" value
 * @method timestamp           getUpdatedAt()             Returns the current record's "updated_at" value
 * @method integer             getUpdatedBy()             Returns the current record's "updated_by" value
 * @method timestamp           getDeletedAt()             Returns the current record's "deleted_at" value
 * @method integer             getDeletedBy()             Returns the current record's "deleted_by" value
 * @method Doctrine_Collection getFotografias()           Returns the current record's "Fotografias" collection
 * @method Doctrine_Collection getSesiones()              Returns the current record's "Sesiones" collection
 * @method Usuario             setUsuario()               Sets the current record's "usuario" value
 * @method Usuario             setContrasena()            Sets the current record's "contrasena" value
 * @method Usuario             setContrasenaUpdatedAt()   Sets the current record's "contrasena_updated_at" value
 * @method Usuario             setNombre()                Sets the current record's "nombre" value
 * @method Usuario             setApellido()              Sets the current record's "apellido" value
 * @method Usuario             setCorreo()                Sets the current record's "correo" value
 * @method Usuario             setPrecio()                Sets the current record's "precio" value
 * @method Usuario             setRolId()                 Sets the current record's "rol_id" value
 * @method Usuario             setComision()              Sets the current record's "comision" value
 * @method Usuario             setCreatedAt()             Sets the current record's "created_at" value
 * @method Usuario             setCreatedBy()             Sets the current record's "created_by" value
 * @method Usuario             setUpdatedAt()             Sets the current record's "updated_at" value
 * @method Usuario             setUpdatedBy()             Sets the current record's "updated_by" value
 * @method Usuario             setDeletedAt()             Sets the current record's "deleted_at" value
 * @method Usuario             setDeletedBy()             Sets the current record's "deleted_by" value
 * @method Usuario             setFotografias()           Sets the current record's "Fotografias" collection
 * @method Usuario             setSesiones()              Sets the current record's "Sesiones" collection
 * 
 * @package    Fotiar
 * @subpackage model
 * @author     Danilo R. Frid
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUsuario extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('usuario');
        $this->hasColumn('usuario', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('contrasena', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('contrasena_updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('nombre', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('apellido', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('correo', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('precio', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('rol_id', 'enum', 9, array(
             'type' => 'enum',
             'fixed' => 0,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'admin',
              1 => 'fotografo',
             ),
             'primary' => false,
             'default' => 'admin',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 9,
             ));
        $this->hasColumn('comision', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('created_by', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_by', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('deleted_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('deleted_by', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Fotografia as Fotografias', array(
             'local' => 'id',
             'foreign' => 'usuario_id'));

        $this->hasMany('Sesion as Sesiones', array(
             'local' => 'id',
             'foreign' => 'usuario_id'));
    }
}