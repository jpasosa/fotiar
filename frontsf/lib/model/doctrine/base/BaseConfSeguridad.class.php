<?php

/**
 * BaseConfSeguridad
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $min_letras
 * @property integer $min_numeros
 * @property integer $min_simbolos
 * @property string $simbolos
 * @property integer $largo_min
 * @property integer $largo_max
 * @property integer $dias_caducidad
 * @property timestamp $created_at
 * @property integer $created_by
 * @property timestamp $updated_at
 * @property integer $updated_by
 * @property timestamp $deleted_at
 * @property integer $deleted_by
 * 
 * @method integer       getMinLetras()      Returns the current record's "min_letras" value
 * @method integer       getMinNumeros()     Returns the current record's "min_numeros" value
 * @method integer       getMinSimbolos()    Returns the current record's "min_simbolos" value
 * @method string        getSimbolos()       Returns the current record's "simbolos" value
 * @method integer       getLargoMin()       Returns the current record's "largo_min" value
 * @method integer       getLargoMax()       Returns the current record's "largo_max" value
 * @method integer       getDiasCaducidad()  Returns the current record's "dias_caducidad" value
 * @method timestamp     getCreatedAt()      Returns the current record's "created_at" value
 * @method integer       getCreatedBy()      Returns the current record's "created_by" value
 * @method timestamp     getUpdatedAt()      Returns the current record's "updated_at" value
 * @method integer       getUpdatedBy()      Returns the current record's "updated_by" value
 * @method timestamp     getDeletedAt()      Returns the current record's "deleted_at" value
 * @method integer       getDeletedBy()      Returns the current record's "deleted_by" value
 * @method ConfSeguridad setMinLetras()      Sets the current record's "min_letras" value
 * @method ConfSeguridad setMinNumeros()     Sets the current record's "min_numeros" value
 * @method ConfSeguridad setMinSimbolos()    Sets the current record's "min_simbolos" value
 * @method ConfSeguridad setSimbolos()       Sets the current record's "simbolos" value
 * @method ConfSeguridad setLargoMin()       Sets the current record's "largo_min" value
 * @method ConfSeguridad setLargoMax()       Sets the current record's "largo_max" value
 * @method ConfSeguridad setDiasCaducidad()  Sets the current record's "dias_caducidad" value
 * @method ConfSeguridad setCreatedAt()      Sets the current record's "created_at" value
 * @method ConfSeguridad setCreatedBy()      Sets the current record's "created_by" value
 * @method ConfSeguridad setUpdatedAt()      Sets the current record's "updated_at" value
 * @method ConfSeguridad setUpdatedBy()      Sets the current record's "updated_by" value
 * @method ConfSeguridad setDeletedAt()      Sets the current record's "deleted_at" value
 * @method ConfSeguridad setDeletedBy()      Sets the current record's "deleted_by" value
 * 
 * @package    Fotiar
 * @subpackage model
 * @author     Danilo R. Frid
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseConfSeguridad extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('conf_seguridad');
        $this->hasColumn('min_letras', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('min_numeros', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('min_simbolos', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('simbolos', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('largo_min', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('largo_max', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('dias_caducidad', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('created_by', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_by', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('deleted_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('deleted_by', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}