<?php

/**
 * Pedido filter form base class.
 *
 * @package    Fotiar
 * @subpackage filter
 * @author     Danilo R. Frid
 * @version    SVN: $Id: sfDoctrineFormFilterGeneratedTemplate.php 29570 2010-05-21 14:49:47Z Kris.Wallsmith $
 */
abstract class BasePedidoFormFilter extends BaseFormFilterDoctrine
{
  public function setup()
  {
    $this->setWidgets(array(
<<<<<<< .mine
      'status'             => new sfWidgetFormChoice(array('choices' => array('' => '', 'draft' => 'draft', 'pendiente' => 'pendiente', 'pagado' => 'pagado'))),
      'external_reference' => new sfWidgetFormFilterInput(),
      'preference_id'      => new sfWidgetFormFilterInput(),
      'user_id'            => new sfWidgetFormDoctrineChoice(array('model' => $this->getRelatedModelName('User'), 'add_empty' => true)),
      'created_at'         => new sfWidgetFormFilterDate(array('from_date' => new sfWidgetFormDate(), 'to_date' => new sfWidgetFormDate(), 'with_empty' => false)),
      'updated_at'         => new sfWidgetFormFilterDate(array('from_date' => new sfWidgetFormDate(), 'to_date' => new sfWidgetFormDate(), 'with_empty' => false)),
=======
      'status'             => new sfWidgetFormChoice(array('choices' => array('' => '', 'draft' => 'draft', 'stable' => 'stable'))),
      'external_reference' => new sfWidgetFormFilterInput(),
      'preference_id'      => new sfWidgetFormFilterInput(),
      'is_pagado'          => new sfWidgetFormChoice(array('choices' => array('' => 'yes or no', 1 => 'yes', 0 => 'no'))),
      'user_id'            => new sfWidgetFormDoctrineChoice(array('model' => $this->getRelatedModelName('User'), 'add_empty' => true)),
      'created_at'         => new sfWidgetFormFilterDate(array('from_date' => new sfWidgetFormDate(), 'to_date' => new sfWidgetFormDate(), 'with_empty' => false)),
      'updated_at'         => new sfWidgetFormFilterDate(array('from_date' => new sfWidgetFormDate(), 'to_date' => new sfWidgetFormDate(), 'with_empty' => false)),
>>>>>>> .r265
    ));

    $this->setValidators(array(
<<<<<<< .mine
      'status'             => new sfValidatorChoice(array('required' => false, 'choices' => array('draft' => 'draft', 'pendiente' => 'pendiente', 'pagado' => 'pagado'))),
      'external_reference' => new sfValidatorPass(array('required' => false)),
      'preference_id'      => new sfValidatorPass(array('required' => false)),
      'user_id'            => new sfValidatorDoctrineChoice(array('required' => false, 'model' => $this->getRelatedModelName('User'), 'column' => 'id')),
      'created_at'         => new sfValidatorDateRange(array('required' => false, 'from_date' => new sfValidatorDateTime(array('required' => false, 'datetime_output' => 'Y-m-d 00:00:00')), 'to_date' => new sfValidatorDateTime(array('required' => false, 'datetime_output' => 'Y-m-d 23:59:59')))),
      'updated_at'         => new sfValidatorDateRange(array('required' => false, 'from_date' => new sfValidatorDateTime(array('required' => false, 'datetime_output' => 'Y-m-d 00:00:00')), 'to_date' => new sfValidatorDateTime(array('required' => false, 'datetime_output' => 'Y-m-d 23:59:59')))),
=======
      'status'             => new sfValidatorChoice(array('required' => false, 'choices' => array('draft' => 'draft', 'stable' => 'stable'))),
      'external_reference' => new sfValidatorPass(array('required' => false)),
      'preference_id'      => new sfValidatorPass(array('required' => false)),
      'is_pagado'          => new sfValidatorChoice(array('required' => false, 'choices' => array('', 1, 0))),
      'user_id'            => new sfValidatorDoctrineChoice(array('required' => false, 'model' => $this->getRelatedModelName('User'), 'column' => 'id')),
      'created_at'         => new sfValidatorDateRange(array('required' => false, 'from_date' => new sfValidatorDateTime(array('required' => false, 'datetime_output' => 'Y-m-d 00:00:00')), 'to_date' => new sfValidatorDateTime(array('required' => false, 'datetime_output' => 'Y-m-d 23:59:59')))),
      'updated_at'         => new sfValidatorDateRange(array('required' => false, 'from_date' => new sfValidatorDateTime(array('required' => false, 'datetime_output' => 'Y-m-d 00:00:00')), 'to_date' => new sfValidatorDateTime(array('required' => false, 'datetime_output' => 'Y-m-d 23:59:59')))),
>>>>>>> .r265
    ));

    $this->widgetSchema->setNameFormat('pedido_filters[%s]');

    $this->errorSchema = new sfValidatorErrorSchema($this->validatorSchema);

    $this->setupInheritance();

    parent::setup();
  }

  public function getModelName()
  {
    return 'Pedido';
  }

  public function getFields()
  {
    return array(
<<<<<<< .mine
      'id'                 => 'Number',
      'status'             => 'Enum',
      'external_reference' => 'Text',
      'preference_id'      => 'Text',
      'user_id'            => 'ForeignKey',
      'created_at'         => 'Date',
      'updated_at'         => 'Date',
=======
      'id'                 => 'Number',
      'status'             => 'Enum',
      'external_reference' => 'Text',
      'preference_id'      => 'Text',
      'is_pagado'          => 'Boolean',
      'user_id'            => 'ForeignKey',
      'created_at'         => 'Date',
      'updated_at'         => 'Date',
>>>>>>> .r265
    );
  }
}
